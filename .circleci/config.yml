version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: demo-yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: demo-node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: demo-yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: demo-node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run: yarn run test
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules

      - store_test_results:
          path: ~/project

      - run: |
          touch testfile.txt
          echo 'testing' > testfile.txt

      - store_artifacts:
          path: testfile.txt

  android:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: ~/project

      - restore_cache:
          key: demo-bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: demo-bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run: bundle exec fastlane test

      - store_test_results:
          path: ~/project/android/reports

  ios:
    macos:
      xcode: "9.0"
    working_directory: /Users/distiller/project/ios
    environment:
      FL_OUTPUT_DIR: /Users/distiller/project/output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: /Users/distiller/project
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      # Not using a workspace here as Node and Yarn versions
      # differ between the macOS image and the Docker containers above.
      - run: yarn
      - run: bundle install
      - run: bundle exec fastlane test
      - run:
          command: cp $FL_OUTPUT_DIR/scan/report.junit $FL_OUTPUT_DIR/scan/results.xml
          when: always
      - store_artifacts:
          path: /Users/distiller/project/output
      - store_test_results:
          path: /Users/distiller/project/output/scan

workflows:
  version: 2
  node-android-ios:
    jobs:
      - build
      - android:
          requires:
            - build
      - ios:
          requires:
            - build
